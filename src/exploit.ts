import { NS } from "@ns";

export async function main(ns: NS): Promise<void> {
    // @ts-expect-error Bypass
    ns.bypass(eval('document'))

    // EditSaveFile
    // export game and add `EditSaveFile` at exploit section
    // and import game

    // PrototypeTampering
    Number.prototype.toExponential = () => ""

    // TimeCompression
    performance.now = () => 0

    // Unclickable
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    const unclickable = eval('document').getElementById('unclickable') as HTMLInputElement | any;
    // Get a reference to the React event handler.
    const handler = Object.keys(unclickable)[1]
    // trigger the onClick event
    unclickable[handler].onClick({ target: unclickable, isTrusted: true })

    // @ts-expect-error UndocumentedFunctionCall
    ns.exploit()

    // @ts-expect-error RealityAlteration
    // break at NetscriptFunctions/Extra.ts `if (x)` and set `x` to true
    ns.alterReality()

    // N00dles
    // eat noodle at noodle bar in New Tokyo

    // YoureNotMeantToAccessThis
    // break at ui/GameRoot.tsx `switch (pageWithContext.page)`
    // and set pageWithContext.page to "Dev"

    // TrueRecursion
    // go to Arcade in New Tokyo open dev tool
    // and execute `window.parent.postMessage(true, "*")` at child iframe console

    // @ts-expect-error INeedARainbow
    ns.rainbow('noodles')

    // @ts-expect-error April fool
    // never gonna give you up
    ns.openDevMenu()
}